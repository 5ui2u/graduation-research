#シェルスクリプト
#!/bin/sh
# mulvalの攻撃グラフを生成
# Author: Xinming Ou
# Copyright (C) 2011, Argus Cybersecurity Lab, Kansas State University

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.

INTERACTIONRULES=$MULVALROOT/kb/interaction_rules.P
INTERACTIONRULES_CVSS=$MULVALROOT/kb/interaction_rules_with_metrics.P
RULES_WITH_METRIC_ARTIFACTS=$MULVALROOT/kb/interaction_rules_with_metric_artifacts.P
rule_file=$INTERACTIONRULES

trace_option=completeTrace2

#graph.sh Pファイル オプション

if [ ! -x $MULVALROOT/bin/attack_graph ]; then
    echo "The attack-graph generator has not been compiled, or the MULVALROOT environment variable is not set appropriately!" #攻撃グラフ ジェネレーターがコンパイルされていないか、MULVALROOT 環境変数が適切に設定されていません。
    exit 1;  #終了
fi

ac_prev= #第1引数
for ac_option #第2引数(オプション)
do
  # If the previous option needs an argument, assign it.
  #前のオプションに引数が必要な場合は、それを割り当てる
  if test -n "$ac_prev"; then #ac_prevが引数が必要か確認
    eval "$ac_prev=\$ac_option" #ac_prevとac_optionを連結
    ac_prev= #第1引数
    continue #ループから抜ける
  fi

  case "$ac_option" in #ac_optionの評価
      -r | --rulefile)
      ac_prev=rule_file ;;

      -a | --additional)
      ac_prev=additional_rule_file ;;

      -c | --constraint)
      ac_prev=constraint_file ;;

      -g | --goal)
      ac_prev=goal ;;

      -d | --dynamic)
      ac_prev=dynamic_file ;;

      -v | --visualize)
      VISUALIZE=true
      CSVOutput=true;;

      -l)
      CSVOutput=true;;

      --arclabel | --reverse | --simple | --nometric | --nopdf)
      VISUALIZATION_OPTS="$VISUALIZATION_OPTS $ac_option" ;;

      -s | --sat)
      SAT=true ;;

      -sg | --satgui)
      SATGUI=true ;;
            -t | --trace)
      ac_prev=trace_option ;;

      -tr | --trim)
      TRIM=true ;;

      -td | --trimdom)
      TRIMDOM=true ;;

      --cvss)
      CVSS=true
      rule_file=$INTERACTIONRULES_CVSS ;;

      -ma)
      if test -z "$CVSS"; then
          CVSS=true
      fi
      rule_file=$RULES_WITH_METRIC_ARTIFACTS ;;

      -h | --help)
      cat <<EOF
Usage: graph_gen.sh [-r|--rule rulefile]
                    [-a|--additional additional_rulefile]
                    [-c|--constraint constraint_file]
                    [-g|--goal goal]
                    [-d|--dynamic dynamic_file]
                    [-p]
                    [-s|--sat]
                    [-t|--t trace_option]
                    [-tr|--trim]
                    [-v|-- [--arclabel] [--reverse] [--nopdf]]
                    [--cvss]
                    [-h|--help]
                    [attack_graph_options]
                    input_file
EOF
      exit ;;

      #認識されないオプションが攻撃グラフ ジェネレーターに渡されます
      ATTACK_GRAPH_OPTS="$ATTACK_GRAPH_OPTS $ac_option" ;;

      *)
      if test -n "$INPUT" #INPUTでない場合
      then
          echo "Incorrect command-line option for graph_gen.sh: $ac_option" >&2 #出力:graph_gen.sh のコマンドラインオプションが正しくありません
          exit 2
      else #INPUTの場合
          INPUT=$ac_option #INPUTにac_optionを代入
      fi
  esac
done

if ! test -n "$INPUT" #INPUTでない場合
then
    echo "What is the input file?" >&2 #出力:入力ファイルは何ですか？
    exit 2 #終了
fi

if ! test -e "$INPUT" #INPUTでない場合
then
    echo "File $INPUT does not exist." >&2 #出力:File $INPUTが存在しません
    exit 2 #終了
fi

#graphViz を使用している場合は、arcsとverticesをファイルにダンプする必要があります
if test -n "$CSVOutput" #CSVOutputの場合
then
    ATTACK_GRAPH_OPTS="-l $ATTACK_GRAPH_OPTS" #-l $ATTACK_GRAPH_OPTS
fi

if test -n "$SAT" #SATの場合
then
    ATTACK_GRAPH_OPTS="-s $ATTACK_GRAPH_OPTS" #-s $ATTACK_GRAPH_OPTS
fi

#DEBUG=true
if test -n "$DEBUG" #DEBUGの場合
then
 echo "MULVALROOT is: " $MULVALROOT #出力
    echo "rule file is:"
    echo "$rule_file"
    echo "constraint file is:"
    echo "$constraint_file"
    echo "additional rule file is:"
    echo "$additional_rule_file"
    echo "attack graph options are:"
    echo "$ATTACK_GRAPH_OPTS"
    echo "input file is:"
    echo "$INPUT"
    echo "goal is:"
    echo "$goal"
    echo "dynamic changes file is:"
    echo "$dynamic_file"
    echo "Attack Graph opts is $ATTACK_GRAPH_OPTS"
fi

rm -f trace_output.P #trace_output.Pを消す
rm -f xsb_log.txt #xsb_log.txtを消す

cat $rule_file $additional_rule_file > running_rules.P

#XSB 実行スクリプトを作成する
cat > run.P <<EOF
:-['$MULVALROOT/lib/libmulval'].
:-['$MULVALROOT/src/analyzer/translate'].
:-['$MULVALROOT/src/analyzer/attack_trace'].
:-['$MULVALROOT/src/analyzer/auxiliary'].

:-dynamic meta/1.

:-load_dyn('running_rules.P').

:-load_dyn('$INPUT').

:-assert(traceMode($trace_option)).

EOF
else
    cat >> run.P <<EOF #ヒアドキュメント
:-load_dyn('$MULVALROOT/src/analyzer/advances_notrim.P').

EOF
fi

if test -z "$CVSS"; then #CVSSの場合
    cat >> run.P <<EOF
:-assert(cvss(_, none)).

EOF
fi

if test -n "$goal"; then #goalの場合

cat >> run.P <<EOF
:- assert(attackGoal($goal)).

EOF
fi

cat run.P > environment.P 

xsb 2>xsb_log.txt 1>&2 <<EOF
[environment].
tell('goals.txt').
writeln('Goal:').
iterate(attackGoal(G),
        (write(' '), write_canonical(G), nl)).
told.
EOF

cat goals.txt; rm goals.txt

cat >> run.P <<EOF
:-mulval_run.
EOF

# XSB で実行中のスクリプトを実行する
xsb 2>xsb_log.txt 1>&2 <<EOF
[run].

EOF

if [ -f trace_output.P ]; then
    if [ -f metric.P ]; then #metric.P
        cat metric.P >> trace_output.P
    fi
    $MULVALROOT/bin/attack_graph $ATTACK_GRAPH_OPTS trace_output.P > AttackGraph.txt
    if [ "$?" -ne "0" ]; then exit 1; fi

    if test -n "$CSVOutput" #CSVOutputの場合
    then
        grep -E "AND|OR|LEAF" AttackGraph.txt > VERTICES.CSV #grep:文字列検索
        grep -Ev "AND|OR|LEAF" AttackGraph.txt > ARCS.CSV
        if test -n "$TRIMDOM" ; then #TRIMDOMの場合
            trim.py 
        fi
    fi
    if test -n "$VISUALIZE"; then #VISUALIZEの場合
        render.sh $VISUALIZATION_OPTS
    else
        echo "The attack graph data can be found in AttackGraph.txt."
        #出力:攻撃グラフ データは、AttackGraph.txt にあります。
    fi
    if test -n "$SATGUI"; then #SATGUIの場合
        $MULVALROOT/utils/load_policy.sh
    fi
else
    echo "The attack simulation encountered an error." #出力:攻撃シミュレーションでエラーが発生しました。
    echo "Please check xsb_log.txt." #出力:xsb_log.txt を確認してください。
    exit 2 #終了
fi

if [ -r VERTICES.CSV ] && [ -r  ARCS.CSV ]; then #VERTICES.CSVとARCS.CSVの場合

    CLASSPATH=$CLASSPATH:$MULVALROOT/bin/adapter #PATHを通す
    java -cp $CLASSPATH XMLConstructor #java
else
 exit 1 #終了
fi


