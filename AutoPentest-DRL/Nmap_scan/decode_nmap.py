#coding:utf8
import re #正規表現を扱う
import sys 

f = open('nmap.txt','r') #nmap.txtを開く
string = "" #vul_info.txtに書き込む値を保持する変数
matchIp = re.compile(r'(?<![\.\d])((?:(?:2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(?:2[0-4]\d|25[0-5]|[01]?\d\d?))(?![\.\d])') #IPの正規表現mテンプレート
matchPort = re.compile(r'\d+/tcp\s+open') #Portの正規表現テンプレートn
matchSer = re.compile(r'open\s+\w+.+') #の正規表現テンプレート
matchCVE = re.compile(r'\bCVE[\d-]+') #CVEの正規表現テンプレートs
for line in f.readlines(): #nmap.txtを1行ずつ抽出
	#print (line)
        if "(0 hosts up)" in line: #(0 hosts up)を含む場合
                print("ERROR: Host appears to be down") #出力ホストがダウンしているようです
                sys.exit(1) #システム終了
	m = ''.join(matchIp.findall(line)) #IPのテンプレートと一致する場合,変数mに代入
	n = ''.join(matchPort.findall(line))[:-4] #ポートのテンプレートと一致する場合,変数nに代入
	s = ''.join(matchCVE.findall(line))[0:] #脆弱性CVEのテンプレートと一致する場合,変数sに代入
	if(m <> ''): 
		string +=  m 
	if(n <> ''): 
		string += 'port:' + n 
	if(s <> ''): 
		string += s 
	if(m <> '' or n <> '' or s <> ''): 
		string += '\n' 
r = open('vul_info.txt','w') #vul_info.txtを開く
r.write(string)  #vul_info.txtにstringを書き込む
r.close() #vul_info.txtを閉じる
f.close() #nmap.txtを閉じる
